openapi: 3.0.0
info:
  title: Expenses API
  description: Expense management endpoints
  version: 1.0.0

paths:
  /api/groups/{id}/expenses:
    get:
      summary: List group expenses
      description: Get a list of all expenses in a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Expense'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Group not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Group not found"
    post:
      summary: Create expense
      description: Create a new expense in a group
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: decimal
                  example: 100.50
                description:
                  type: string
                  example: "Dinner at restaurant"
                paidBy:
                  type: integer
                  example: 1
                participantIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
              required:
                - amount
                - description
                - paidBy
                - participantIds
      responses:
        '201':
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Expense'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Amount, description, paidBy, and participantIds are required"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Group or user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Group or user not found"

  /api/expenses/{id}:
    delete:
      summary: Delete expense
      description: Delete an expense
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Expense deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Expense deleted successfully"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized"
        '404':
          description: Expense not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Expense not found"

components:
  schemas:
    Expense:
      type: object
      properties:
        id:
          type: integer
          example: 1
        group_id:
          type: integer
          example: 1
        amount:
          type: number
          format: decimal
          example: 100.50
        description:
          type: string
          example: "Dinner at restaurant"
        paid_by:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00Z"
        splits:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseSplit'

    ExpenseSplit:
      type: object
      properties:
        expense_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 2
        amount:
          type: number
          format: decimal
          example: 33.50

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
